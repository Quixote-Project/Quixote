From 147c7a76749a84c3e0be140f33c8ed9e9af87f30 Mon Sep 17 00:00:00 2001
From: "Dr. Greg Wettstein" <greg@enjellic.com>
Date: Fri, 19 May 2017 16:08:39 -0500
Subject: [PATCH 24/24] Use correct lengths for null-terminated strings.

The kzalloc allocation lengths for points which are imbedded in
various structures had omitted the length for the null byte.
This was probably being masked by alighnment padding in the
memory arena areas.

The allocation counts for the strings were incremented by one to
insure that the minimal amount of space for the strings was
allocated.
---
 security/integrity/ima/ima_identity.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/security/integrity/ima/ima_identity.c b/security/integrity/ima/ima_identity.c
index 44be5145486a..ba3b58e226c0 100644
--- a/security/integrity/ima/ima_identity.c
+++ b/security/integrity/ima/ima_identity.c
@@ -274,11 +274,11 @@ static struct trajectory * create_point(const char *filename,
 	entry = kzalloc(sizeof(*entry), GFP_KERNEL);
 	if (!entry)
 		goto done;
-	fname = kzalloc(strlen(filename), GFP_KERNEL);
+	fname = kzalloc(strlen(filename) + 1, GFP_KERNEL);
 	if ( !fname )
 		goto done;
 	entry->filename = fname;
-	process = kzalloc(strlen(current->comm), GFP_KERNEL);
+	process = kzalloc(strlen(current->comm) + 1, GFP_KERNEL);
 	if (!process)
 		goto done;
 	entry->process = process;
@@ -1617,7 +1617,7 @@ struct iso_identity_namespace *ima_copy_behavior_ns(unsigned long flags,
 		retn = -ENOMEM;
 		goto done;
 	}
-	ns->map->update.attr.name = kzalloc(strlen(bufr), GFP_KERNEL);
+	ns->map->update.attr.name = kzalloc(strlen(bufr) + 1, GFP_KERNEL);
 	if (!ns->map->update.attr.name) {
 		retn = -ENOMEM;
 		goto done;
-- 
2.11.0

