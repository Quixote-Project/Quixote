From dbfab63d5fa004d5cde9c2b5e0eb0d7b75f184fe Mon Sep 17 00:00:00 2001
From: "Dr. Greg" <greg@enjellic.com>
Date: Sun, 22 Aug 2021 20:52:40 -0500
Subject: [PATCH 46/50] Add additional modes to security domain configuration
 syscall.

Two additional bit field entries were allocated for the system
call used to configure a security event namespace.

The first bitfield, 0x8, is used to configure the security event
domain for TE enforcement.  The implementation is very straigth
forward and simply loops through the array of envents and sets
the action value to specify that EPERM should be returned if a
process with bad actor status is encountered.

The second bitfield, 0x10, is used to specify that the security
event domain is to be externally modeled.
---
 security/integrity/ima/ima_events.c | 27 ++++++++++++++++++---------
 1 file changed, 18 insertions(+), 9 deletions(-)

diff --git a/security/integrity/ima/ima_events.c b/security/integrity/ima/ima_events.c
index a83eac975e28..b06b4bb4c308 100644
--- a/security/integrity/ima/ima_events.c
+++ b/security/integrity/ima/ima_events.c
@@ -30,6 +30,8 @@
 #define IMA_SET_CONTOUR		0x1
 #define IMA_SET_PSEUDONYM	0x2
 #define IMA_SET_AI		0x4
+#define IMA_TE_ENFORCE		0x8
+#define IMA_EVENT_EXTERNAL	0x10
 
 /* Structure defining actor elements. */
 struct event_actor {
@@ -2368,6 +2370,7 @@ SYSCALL_DEFINE3(config_events_ns, unsigned char *, bufr, size_t, cnt,
 		unsigned long, flags)
 {
 	int retn = -EINVAL;
+	unsigned int lp;
 	struct ima_events_map *map = current_map();
 	struct ai_control {
 		unsigned int hook;
@@ -2378,28 +2381,23 @@ SYSCALL_DEFINE3(config_events_ns, unsigned char *, bufr, size_t, cnt,
 
 	if (!capable(CAP_TRUST))
 		return -EPERM;
-	if (flags & ~(IMA_SET_CONTOUR | IMA_SET_PSEUDONYM | IMA_SET_AI))
+	if (map->domain_sealed)
+		return -EPERM;
+	if (flags & ~(IMA_SET_CONTOUR | IMA_SET_PSEUDONYM | IMA_SET_AI | \
+		      IMA_TE_ENFORCE | IMA_EVENT_EXTERNAL))
 		return -EINVAL;
 
 	if (flags & IMA_SET_PSEUDONYM) {
-		if (map->domain_sealed)
-			return -EPERM;
 		retn = load_pseudonym(bufr, cnt);
 		goto done;
 	}
 
 	if (flags & IMA_SET_CONTOUR) {
-		if (map->domain_sealed)
-			return -EPERM;
 		retn = load_point(bufr, cnt);
 		goto done;
 	}
 
 	if (flags & IMA_SET_AI) {
-		if (map->domain_sealed) {
-			retn = -EPERM;
-			goto done;
-		}
 		if (cnt != sizeof(ctl)) {
 			retn = -EINVAL;
 			goto done;
@@ -2425,6 +2423,17 @@ SYSCALL_DEFINE3(config_events_ns, unsigned char *, bufr, size_t, cnt,
 		retn = 0;
 	}
 
+	if (flags & IMA_TE_ENFORCE) {
+		for (lp = 0; lp < ARRAY_SIZE(AI_events); ++lp)
+			map->AI_events[lp].action = AI_action_eperm;
+		retn = 0;
+	}
+
+	if (flags & IMA_EVENT_EXTERNAL) {
+		map->external = true;
+		retn = 0;
+	}
+
  done:
 	return retn;
 }
-- 
2.31.1

