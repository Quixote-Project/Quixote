#! /bin/bash

#
# This file contains the implementation of a utility which integrates
# the multiple message handling phases into unified provisioning of
# an Enhanced Privacy ID (EPID).
#
# While this functionality may be ultimately integrated into the
# sgx-provision utility this script demonstrates how the utility can
# be used to debug the provisioning process.
#

# **************************************************************************
# * (C)Copyright IDfusion, LLC. All rights reserved.
# *
# * Please refer to the file named Documentation/COPYRIGHT in the top of
# * the source tree for copyright and licensing information.
# **************************************************************************/


# Variable to hold the provisioning authentication key.
declare Key="";

# Variable to hold the destination for sealed EPID output.
declare Output="/var/lib/IDfusion/data/EPID.bin";

# Variable used to specify a request for verbose output.
declare V="";


#
# Option processing.
#
while getopts "o:v" Arg;
do
        case $Arg in
		o)	Output="$OPTARG";;

		v)	V="-v";;
        esac;
done;


#
# Request an endpoint identifier.
#
sgx-provision -E $V -o endpoint;


#
# Obtain the RSA provisioning key (PEK) and and request the first
# provisioning message.  The message one handling outputs the
# authentication key to standard output which the sed script
# captures in a file for subsequent re-use.
#
if [ -z "$V" ]; then
	sgx-provision -1 -i endpoint -o msg1 -k pek > msg1.output;
else
	sgx-provision -1 $V -i endpoint -o msg1 -k pek | tee msg1.output;
fi;

Keyfile=`sed -n '/SK:/ {n;p}' msg1.output`;
rm msg1.output;


#
# If the platform has been previously provisioned the message one
# response will contain the EPID private key.  Use the test mode of
# the provisioning utility to determine if this is a final mesage
# and route the message handling appropriately.
#
sgx-provision -T $V -i msg1;
if [ $? -eq 0 ]; then
	mv msg1 msg2;
else
	sgx-provision -2 $V -i msg1 -o msg2 -k pek -s $Keyfile;
fi;


#
# Extract the EPID key from the final message.
#
sgx-provision -3 $V -i msg2 -o $Output -k pek -s $Keyfile;


# Cleanup.
rm -f endpoint msg1 msg2 pek;
exit 0;
