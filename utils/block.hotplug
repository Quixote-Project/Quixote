#! /bin/bash

#
# ESD block device handler.
#	This script handles mounting of a filesytem on a partition.
#	The partition is read for any patient identity tokens which
#	are written to the query client FIFO.
#

# Variable declarations.
declare -r Sysfs="/sys"
declare -r ESD_fifo="/var/lib/NAAAIM/query-client";

# **************************************************************************
# * (C)Copyright IDfusion, LLC. All rights reserved.
# *
# * Please refer to the file named Documentation/COPYRIGHT in the top of
# * the source tree for copyright and licensing information.
# **************************************************************************/

#
# This function implements mounting and reading of a USB based
# IDfusion identity fob.
#
function load_identities() {

	local ESD_device="/dev/$DEVNAME";


	# Early exit if the client FIFO does not exit.
	if [ ! -e "$ESD_fifo" ]; then
		logger -p into -t "hotplug $SEQNUM" query fifo not found.
		 return;
	fi;


	logger -p info -t "hotplug $SEQNUM" \
		Scanning $ESD_DEVICE for identity tokens.;

	mount $ESD_device /mnt;
	for ESD_file in /mnt/*.idt;
	do
		logger -p info -t "hotplug $SEQNUM" Found token $ESD_file;
		if [ "$file" != "/mnt/*.idt" ]; then
			cat $ESD_file >$ESD_fifo;
		fi;
	done;

	umount /mnt;
	return;
}


# Selection action based environment variable passed to hotplug script.
case $ACTION in
	add)	if [ "$DEVTYPE" = "partition" ]; then
			load_identities;
		fi;;
esac;


exit 0;
