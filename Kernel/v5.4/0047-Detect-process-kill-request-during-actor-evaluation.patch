From 05553ab10885be6f4f21590debbdb69e707f06c2 Mon Sep 17 00:00:00 2001
From: "Dr. Greg" <greg@enjellic.com>
Date: Thu, 26 Aug 2021 03:35:11 -0500
Subject: [PATCH 47/50] Detect process kill request during actor evaluation.

The export_event() function was not checking for a termination
signal while waiting for the external actor evaluation to
complete.  This created a situation where a process could be
stranded if the monitor process that was conveying the security
domain events to the evaluator was killed.

The waiting code was modified to check for a pending SIGKILL when
the process gets re-scheduled.  If this signal is pending the bad
actor bit is set and the process is allowed to proceed under this
constraint.

Setting the bad actor status bit may have to be re-visited but
this was chosen out of an abundance of caution.
---
 security/integrity/ima/ima_events.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/security/integrity/ima/ima_events.c b/security/integrity/ima/ima_events.c
index b06b4bb4c308..6523f1181450 100644
--- a/security/integrity/ima/ima_events.c
+++ b/security/integrity/ima/ima_events.c
@@ -585,6 +585,12 @@ static int export_event(const char *filename, struct event_actor *actor,
 	while (current->bad_actor == 2) {
 		set_current_state(TASK_INTERRUPTIBLE);
 		schedule();
+		if (signal_pending(current)) {
+			if (sigismember(&current->pending.signal, SIGKILL) ||
+			    sigismember(&current->signal->shared_pending.signal,
+					SIGKILL))
+				current->bad_actor = 1;
+		}
 	}
 
 	pr_debug("[%s]: %u signal %u continue %s:%s with status %u\n",
-- 
2.31.1

