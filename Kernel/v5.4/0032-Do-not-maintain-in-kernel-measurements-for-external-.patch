From fe9f15e9aa55c67cc5da4f6f4801fdb5e0a708cd Mon Sep 17 00:00:00 2001
From: "Dr. Greg" <greg@enjellic.com>
Date: Sat, 20 Feb 2021 09:44:05 -0600
Subject: [PATCH 32/50] Do not maintain in kernel measurements for external
 evaluation.

The external flag that was added to the events namespace is now
used to disable the maintenance of the in kernel event domain
when an external evaluator has been enabled.
---
 security/integrity/ima/ima_events.c | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/security/integrity/ima/ima_events.c b/security/integrity/ima/ima_events.c
index 85df12af9568..f3844248d3d4 100644
--- a/security/integrity/ima/ima_events.c
+++ b/security/integrity/ima/ima_events.c
@@ -509,9 +509,8 @@ static int add_forensic_point(const char *filename,
 	return retn;
 }
 
-static int add_exchange_event(const char *filename,
-			      struct event_actor *actor,
-			      struct event_subject *subject)
+static int export_event(const char *filename, struct event_actor *actor,
+			struct event_subject *subject)
 {
 	int retn = 1;
 	struct ima_events_map *map;
@@ -1682,9 +1681,12 @@ int ima_events_is_mapped(int function, struct integrity_iint_cache *iint,
 			  &actor, &subject, mapping) != 0)
 		return 0;
 
-	ima_set_actor_status(function, pathname, &subject, mapping);
+	if (map->external) {
+		export_event(pathname, &actor, &subject);
+		return 0;
+	}
 
-	add_exchange_event(pathname, &actor, &subject);
+	ima_set_actor_status(function, pathname, &subject, mapping);
 
 	if (have_point(mapping)) {
 		pr_debug("[%s]: Point cache hit path=%s, mapping=%*phN\n",
@@ -1943,6 +1945,9 @@ static int add_aggregate(struct crypto_shash *tfm,
 
 
 	/* Add the aggregate entry. */
+	if (!map->external)
+		goto done;
+
 	mp = kzalloc(sizeof(struct event), GFP_KERNEL);
 	if (!mp) {
 		retn = -ENOMEM;
-- 
2.31.1

