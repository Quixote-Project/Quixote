From 76bb2ab06123b3cb766a3f7a69bd2e034c5d4c09 Mon Sep 17 00:00:00 2001
From: "Dr. Greg" <greg@enjellic.com>
Date: Thu, 11 Feb 2021 10:12:15 -0600
Subject: [PATCH 21/50] Change nomenclature for elements of actor measurement.

The structure that carries the elements used to create a
measurement for the context of execution involved in a security
event was changed from:

actor_event

To:

event_actor

Which is now consistent with the previous patch that made a
similar nomenclature change for the subject involved in the
event.
---
 security/integrity/ima/ima_events.c | 30 ++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

diff --git a/security/integrity/ima/ima_events.c b/security/integrity/ima/ima_events.c
index 1a552218be60..ef467c836c7d 100644
--- a/security/integrity/ima/ima_events.c
+++ b/security/integrity/ima/ima_events.c
@@ -32,7 +32,7 @@
 #define IMA_SET_AI		0x4
 
 /* Structure defining actor elements. */
-struct actor_event {
+struct event_actor {
 	uid_t uid;
 	uid_t euid;
 	uid_t suid;
@@ -139,7 +139,7 @@ struct trajectory {
 	char *filename;
 	char *process;
 	pid_t pid;
-	struct actor_event actor;
+	struct event_actor actor;
 	struct event_subject subject;
 };
 
@@ -275,7 +275,7 @@ static int generate_event(struct ima_events_map *map, enum event_types event)
  *	elements used to define the measurement of the actor.
  */
 
-static void get_identity(struct actor_event *id)
+static void get_identity(struct event_actor *id)
 
 {
 	kernel_cap_t eff, per, inh;
@@ -396,7 +396,7 @@ static int add_event_point(char *point, bool valid)
  */
 
 static struct trajectory * create_point(const char *filename,
-					struct actor_event *actor,
+					struct event_actor *actor,
 					struct event_subject *subject)
 {
 	bool err = true;
@@ -440,7 +440,7 @@ static struct trajectory * create_point(const char *filename,
  */
 
 static int add_trajectory_point(const char *filename,
-				struct actor_event *actor,
+				struct event_actor *actor,
 				struct event_subject *subject)
 {
 	int retn = 1;
@@ -478,7 +478,7 @@ static int add_trajectory_point(const char *filename,
  */
 
 static int add_forensic_point(const char *filename,
-			      struct actor_event *actor,
+			      struct event_actor *actor,
 			      struct event_subject *subject)
 {
 	int retn = 1;
@@ -506,7 +506,7 @@ static int add_forensic_point(const char *filename,
 }
 
 static int add_exchange_event(const char *filename,
-			      struct actor_event *actor,
+			      struct event_actor *actor,
 			      struct event_subject *subject)
 {
 	int retn = 1;
@@ -1383,9 +1383,9 @@ int ima_events_genhash(struct ima_template_entry *entry, char *tpm_digest)
 	return retn;
 }
 
-static int ima_get_actor_event(struct crypto_shash *tfm,
-				  struct actor_event *identity,
-				  char *mapping)
+static int ima_get_event_actor(struct crypto_shash *tfm,
+			       struct event_actor *identity,
+			       char *mapping)
 {
 	int retn = 0;
 	SHASH_DESC_ON_STACK(shash, tfm);
@@ -1412,7 +1412,7 @@ int ima_get_actor(struct ima_field_data *field_data, char *actor)
 {
 	int retn = 1;
 	struct crypto_shash *tfm;
-	struct actor_event *identity = NULL;
+	struct event_actor *identity = NULL;
 
 	tfm = crypto_alloc_shash("sha256", 0, 0);
 	if (IS_ERR(tfm))
@@ -1422,7 +1422,7 @@ int ima_get_actor(struct ima_field_data *field_data, char *actor)
 	if (!identity)
 		goto done;
 
-	retn = ima_get_actor_event(tfm, identity, actor);
+	retn = ima_get_event_actor(tfm, identity, actor);
 	if(retn!=0)
 		goto done;
 	field_data->point = identity;
@@ -1536,7 +1536,7 @@ int ima_get_subject(struct ima_event_data *event_data,
 static int ima_map_identity(int function, struct integrity_iint_cache *iint,
 			    struct ima_template_desc *template_desc,
 			    struct file *file, const char *pathname,
-			    struct actor_event *actor,
+			    struct event_actor *actor,
 			    struct event_subject *subject, char *mapping)
 {
 	int retn, num_fields;
@@ -1564,7 +1564,7 @@ static int ima_map_identity(int function, struct integrity_iint_cache *iint,
 					 entry->template_desc,
 					 num_fields, &hash.hdr);
 
-	*actor = *(struct actor_event *) entry->template_data[0].point;
+	*actor = *(struct event_actor *) entry->template_data[0].point;
 	*subject = *(struct event_subject *) entry->template_data[1].point;
 	memcpy(mapping, hash.digest, sizeof(hash.digest));
 
@@ -1606,7 +1606,7 @@ int ima_events_is_mapped(int function, struct integrity_iint_cache *iint,
 {
 	int retn = 0;
 	char mapping[WP256_DIGEST_SIZE];
-	struct actor_event actor;
+	struct event_actor actor;
 	struct event_subject subject;
 	struct ima_events_map *map = current_map();
 
-- 
2.31.1

